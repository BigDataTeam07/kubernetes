apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: bitnami-kafka
  namespace: kafka-ns
spec:
  serviceName: "bitnami-kafka-headless"
  replicas: 1 # Set to 1 for development, increase for production
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: bitnami-kafka
  template:
    metadata:
      labels:
        app: bitnami-kafka
    spec:
      securityContext:
        fsGroup: 1001 # Adding fsGroup for Bitnami Kafka
        runAsUser: 1001 # Bitnami Kafka runs as user 1001
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - bitnami-kafka
                topologyKey: kubernetes.io/hostname
      containers:
        - name: kafka
          image: bitnami/kafka:4.0.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9092
              name: plaintext
            - containerPort: 9093
              name: controller
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: KAFKA_CFG_NODE_ID
              value: "1"
            - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
              value: "PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT"
            - name: KAFKA_CFG_PROCESS_ROLES
              value: "broker,controller"
            - name: KAFKA_CFG_CONTROLLER_QUORUM_VOTERS
              value: "1@bitnami-kafka-0.bitnami-kafka-headless.kafka-ns.svc.cluster.local:9093"
            - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES
              value: "CONTROLLER"
            - name: KAFKA_CFG_INTER_BROKER_LISTENER_NAME
              value: "PLAINTEXT"
            - name: KAFKA_CFG_LISTENERS
              value: "PLAINTEXT://:9092,CONTROLLER://:9093"
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              value: "PLAINTEXT://$(POD_NAME).bitnami-kafka-headless.kafka-ns.svc.cluster.local:9092"
            - name: KAFKA_CFG_NUM_PARTITIONS
              value: "3"
            # For single node setup, set replication factor to 1
            - name: KAFKA_CFG_DEFAULT_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR
              value: "1"
            - name: KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE
              value: "true"
            - name: KAFKA_CFG_DELETE_TOPIC_ENABLE
              value: "true"
            - name: KAFKA_CFG_LOG_RETENTION_HOURS
              value: "168"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          volumeMounts:
            - name: data
              mountPath: /bitnami/kafka
          resources:
            requests:
              memory: "2Gi"
              cpu: "500m"
            limits:
              memory: "4Gi"
              cpu: "2"
          livenessProbe:
            tcpSocket:
              port: 9092
            initialDelaySeconds: 240
            periodSeconds: 20
          # For one broker setup, no need for a readiness probe
          # readinessProbe:
          #   tcpSocket:
          #     port: 9092
          #   initialDelaySeconds: 180
          #   periodSeconds: 10
      volumes: []
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: ebs-sc
        resources:
          requests:
            storage: 10Gi
